name: "CI for humiologging library"

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build-package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.11"

      - name: "Install build and twine"
        run: "python -m pip install build twine"
      - name: "Build package"
        run: "python -m build"
      - name: "List result"
        run: "ls -l dist"
      - name: "Check long_description"
        run: "python -m twine check dist/*"

  test:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: "Set up Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: "Install test dependencies"
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        set -xe
        python -VV
        python -m site
        python -m pip install --upgrade pip flit wheel
        python -m pip install --upgrade virtualenv tox tox-gh-actions coverage

    - name: "Lint with flake8"
      run: |
        python -m tox -e flake8-critical

    - name: "Test with tox for ${{ matrix.python-version }}"
      run: |
        python -m tox

    - name: "Combine coverage"
      run: |
        set -xe
        python -m coverage xml

    - name: "Upload to Codecov"
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.11"

      - name: "Install build and twine"
        run: "python -m pip install build twine"
      - name: "Build package"
        run: "python -m build"
      - name: "List result"
        run: "ls -l dist"
      - name: "Check long_description"
        run: "python -m twine check dist/*"
